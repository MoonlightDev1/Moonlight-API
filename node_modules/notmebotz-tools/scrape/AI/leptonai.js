  const axios = require('axios');

  const apiConfig = {
    baseURL: "https://search.lepton.run/api/",
    headers: { "Content-Type": "application/json" },
  };

  const apiInstance = axios.create(apiConfig);

  function generateRandomID(length) {
    const characters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
    let result = "";
    for (let i = 0; i < length; i++) {
      const randomIndex = Math.floor(Math.random() * characters.length);
      result += characters.charAt(randomIndex);
    }
    return result;
  }

  async function leptonAi(query) {
    try {
      const requestId = generateRandomID(10);
      const requestData = {
        query: query,
        rid: requestId,
      };

      const response = await apiInstance.post("query", requestData);
      const llmResponseRegex = /__LLM_RESPONSE__([\s\S]*?)__RELATED_QUESTIONS__/;
      const match = response.data.match(llmResponseRegex);

      if (match && match[1]) {
        const data = match[1].replace(/__LLM_RESPONSE__|__RELATED_QUESTIONS__/g, "").trim();
        return {
          author: "Herza",
          status: 200,
          msg: data,
        };
      } else {
        throw new Error("No LLM response found.");
      }
    } catch (error) {
      return {
        author: "Herza",
        status: 500,
        msg: "Error fetching LLM response: " + error.message,
      };
    }
  }

module.exports = { leptonAi };
