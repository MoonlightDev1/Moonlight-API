const axios = require('axios');
const crypto = require('crypto');

async function tm() {
    try {
        const { data } = await axios.get('https://sssinstagram.com/msec');
        return Math.floor(data.msec * 1000);
    } catch {
        return Date.now();
    }
}

async function generateSignature(url, secretKey) {
    const time = await tm();
    const ab = Date.now() - (time ? Date.now() - time : 0);
    const hashString = `${url}${ab}${secretKey}`;
    const buffer = await crypto.subtle.digest('SHA-256', new TextEncoder().encode(hashString));
    const signature = Array.from(new Uint8Array(buffer)).map(b => b.toString(16).padStart(2, '0')).join('');
    
    return { signature, ab, time };
}

async function ssig(url) {
    const secretKey = '19e08ff42f18559b51825685d917c5c9e9d89f8a5c1ab147f820f46e94c3df26';
    const { signature, ab, time } = await generateSignature(url, secretKey);
    
    const requestData = {
        url,
        ts: ab,
        _ts: 1739186038417, 
        _tsc: time ? Date.now() - time : 0,
        _s: signature
    };

    const headers = {
        'Accept': 'application/json, text/plain, */*',
        'Content-Type': 'application/json',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
        'Referer': 'https://sssinstagram.com/',
        'Authority': 'sssinstagram.com/',
        'Origin': 'https://sssinstagram.com/'
    };

    try {
        const { data } = await axios.post('https://sssinstagram.com/api/convert', requestData, { headers });

        if (data.meta && Array.isArray(data.meta.comments)) {
            data.meta.comments = data.meta.comments.map(comment => ({
                text: comment.text || null,
                username: comment.username || null,
                likes: comment.likes || 0
            }));
        }

        return ({
            author: "Herza",                     status: 200,                         data
        })
    } catch (error) {
        const errData = { error: 'Error scraping data', details: error.response ? error.response.data : error.message };
        console.log(JSON.stringify(errData, null, 2));
        return JSON.parse(errData, null, 4)
    }
}

module.exports = { ssig }